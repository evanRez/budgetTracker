// <auto-generated />
using System;
using BudgetTracker.MinimalAPI.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BudgetTracker.MinimalAPI.Migrations
{
    [DbContext(typeof(BudgetTrackerDb))]
    [Migration("20231105002228_FKRelationsPt2")]
    partial class FKRelationsPt2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClassLib.Models.Transactions.TransactionDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("InitiatedDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("PaidBackAmount")
                        .HasColumnType("numeric");

                    b.Property<DateOnly>("PostedDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("SpentAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("UserDTOId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserDTOId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ClassLib.Models.Users.UserDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Auth0UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Picture")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClassLib.Models.Transactions.TransactionDTO", b =>
                {
                    b.HasOne("ClassLib.Models.Users.UserDTO", "UserDTO")
                        .WithMany("Transactions")
                        .HasForeignKey("UserDTOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserDTO");
                });

            modelBuilder.Entity("ClassLib.Models.Users.UserDTO", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
